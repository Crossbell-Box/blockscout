name: Push and Deploy

on:
  push:
    branches:
      - master
env:
  OTP_VERSION: '24.3.4.1'
  ELIXIR_VERSION: '1.13.4'
  IMAGE_NAME: rss3/blockscout
  REGION_ID: us-east-1
  DEV_ACK_CLUSTER_ID: cd1d0ffc40b5242b39ddda1864e71e30d
  PROD_ACK_CLUSTER_ID: cfc647c22fd6848b5a602ad4d7470632b

jobs:
  build:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          cache-from: type=registry,ref=rss3/blockscout:buildcache
          cache-to: type=registry,ref=rss3/blockscout:buildcache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          # build-args: |
          #   CACHE_EXCHANGE_RATES_PERIOD=
          #   DISABLE_READ_API=false
          #   API_PATH=
          #   NETWORK_PATH=
          #   DISABLE_WEBAPP=false
          #   DISABLE_WRITE_API=false
          #   CACHE_ENABLE_TOTAL_GAS_USAGE_COUNTER=
          #   WOBSERVER_ENABLED=false
          #   ADMIN_PANEL_ENABLED=false
          #   CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
          #   DISABLE_BRIDGE_MARKET_CAP_UPDATER=false
          #   CACHE_BRIDGE_MARKET_CAP_UPDATE_INTERVAL=
          #   SOCKET_ROOT=

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set K8s context
        uses: aliyun/ack-set-context@v1
        with:
          access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
          access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
          cluster-id: "${{ env.PROD_ACK_CLUSTER_ID }}"
      - name: Install Tools
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.25.1/yq_linux_amd64.tar.gz -O - | tar xz && mv yq_linux_amd64 /usr/local/bin/yq
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.22.10/bin/linux/amd64/kubectl && chmod +x kubectl && mv kubectl /usr/local/bin/kubectl
      - uses: sljeff/secrets2env@main
        with:
          secrets-json: ${{ toJson(secrets) }}
      - name: Deploy
        env:
          IMAGE_TAG_RELEASE: ${{ env.IMAGE_NAME }}:${{ needs.build.outputs.version }}
        run: |
          sh apply.sh deploy/prod/*
